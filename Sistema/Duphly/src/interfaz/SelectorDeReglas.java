/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaz;

import DataDefinition.Note;
import com.sun.javafx.sg.prism.NGCanvas;
import duphly.DuphlyMusicComposer;
import java.awt.Color;
import java.awt.Component;
import java.util.ArrayList;
import java.util.List;
import javafx.util.Pair;
import javax.swing.JList;
import javax.swing.JOptionPane;
import jm.music.data.Score;

/**
 *
 * @author chuni
 */
public class SelectorDeReglas extends javax.swing.JFrame {

    private List<Pair<String, String>> reglasDisponible;

    private List<Pair<String, String>> reglasSeleccionadas;

    private int cantGenerar = 0;
    private boolean opcion = false;

    public SelectorDeReglas(boolean op) {
        initComponents();
        reglasDisponible = DuphlyMusicComposer.getInstance().GetImprovisationRulesNamesAndType();
        opcion = op;
        if (op) {
            List<Pair<String, String>> Intermedia = DuphlyMusicComposer.getInstance().GetImprovisationRulesNamesAndType();
            ArrayList<Pair<String, String>> Intermedia2 = new ArrayList<>();
            for (Pair<String, String> regla : Intermedia) {
                if (!regla.getValue().equals("Generar")) {
                    Intermedia2.add(regla);
                }
            }
            reglasDisponible = Intermedia2;
        }
        /*
            opcion = op;
            for (Pair<String, String> regla : reglasDisponible) {
                if (regla.getValue().equals("Generar")) {
                    reglasDisponible.remove(regla);
                }
            }
        }*/

        reglasSeleccionadas = new ArrayList<Pair<String, String>>();
        //reglasDisponible = new ArrayList<Pair<String, String>>();
        List<Pair<String, String>> list = DuphlyMusicComposer.getInstance().GetImprovisationRulesNamesAndType();
//        List<String> listaReglas = new ArrayList<String>();
//        for (int i = 0; i < list.size(); i++) {
//            listaReglas.add(list.get(i).getKey() + list.get(i).getValue());
//        }

        jList1.setListData(reglasDisponible.toArray());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Selector de reglas");
        setResizable(false);

        jList1.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jList1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(jList1);

        jScrollPane2.setViewportView(jList2);

        jButton1.setText(">>");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("<<");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Terminar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("SELECTOR DE REGLAS");

        jButton4.setText("Salir");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(368, 368, 368))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 448, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 455, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(438, 438, 438)
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton4)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(92, 92, 92)
                        .addComponent(jButton1)
                        .addGap(44, 44, 44)
                        .addComponent(jButton2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane2)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 314, Short.MAX_VALUE))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton3)
                    .addComponent(jButton4))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        Pair<String, String> selec = (Pair<String, String>) jList1.getSelectedValue();
        String valor = ((Pair<String, String>) selec).getValue();
        if (cantGenerar == 0 || (cantGenerar > 0 && !valor.equals("Generar"))) {
            reglasSeleccionadas.add(selec);
            reglasDisponible.remove(selec);
            jList1.removeAll();
            jList2.removeAll();
            jList1.setListData(reglasDisponible.toArray());
            jList2.setListData(reglasSeleccionadas.toArray());
            jList1.setBackground(Color.WHITE);
            jList2.setBackground(Color.WHITE);
            jList1.validate();
            jList2.validate();
            if (valor.equals("Generar")) {
                cantGenerar++;
            }
        } else {
            JOptionPane.showMessageDialog(null, "solo puede haber una regla de generar");
        }


    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        Pair<String, String> selec = (Pair<String, String>) jList2.getSelectedValue();
        String valor = ((Pair<String, String>) selec).getValue();
        reglasDisponible.add(selec);
        reglasSeleccionadas.remove(selec);
        jList1.removeAll();
        jList2.removeAll();
        jList1.setListData(reglasDisponible.toArray());
        jList2.setListData(reglasSeleccionadas.toArray());
        jList1.setBackground(Color.WHITE);
        jList2.setBackground(Color.WHITE);
        if (valor.equals("Generar")) {
            cantGenerar--;
        }
        jList1.validate();
        jList2.validate();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

        if (cantGenerar == 1 || opcion) {
            DuphlyMusicComposer.getInstance().setMelodyRules(reglasSeleccionadas);
            if (opcion) {

                List<Note> listNotes = DuphlyMusicComposer.getInstance().ApplyImprovisationRuleListByName(reglasSeleccionadas, DuphlyMusicComposer.getInstance().getInternalBase(), DuphlyMusicComposer.getInstance().getListaNotasImprovisacion());
                DuphlyMusicComposer.getInstance().setListaNotasImprovisacion((ArrayList<Note>) listNotes);
                Score musicComposition = DuphlyMusicComposer.getInstance().ConvertImprovisationAndBaseToJmusic(listNotes, DuphlyMusicComposer.getInstance().getInternalBase(), 60);
                DuphlyMusicComposer.getInstance().setMelody(musicComposition);
            }
            if (opcion) {
                Improvisador imp = new Improvisador();
                imp.setVisible(true);
            } else {
                MenuImprovisar m = new MenuImprovisar();
                m.setVisible(true);
            }
            this.dispose();
        } else {
            JOptionPane.showMessageDialog(null, "debe haber una regla de generar");
        }

    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        if (opcion) {
            Improvisador imp = new Improvisador();
            imp.setVisible(true);
        } else {
            MenuImprovisar m = new MenuImprovisar();
            m.setVisible(true);
        }
        this.dispose();    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SelectorDeReglas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SelectorDeReglas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SelectorDeReglas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SelectorDeReglas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SelectorDeReglas(false).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JList jList1;
    private javax.swing.JList jList2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
